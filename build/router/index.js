"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var commentRouter_1 = __importDefault(require("./commentRouter"));
var companyRouter_1 = __importDefault(require("./companyRouter"));
var contactRouter_1 = __importDefault(require("./contactRouter"));
var dealRouter_1 = __importDefault(require("./dealRouter"));
var dealTitleRouter_1 = __importDefault(require("./dealTitleRouter"));
var dimensionRouter_1 = __importDefault(require("./dimensionRouter"));
var emailRouter_1 = __importDefault(require("./emailRouter"));
var orderItemRouter_1 = __importDefault(require("./orderItemRouter"));
var orderRouter_1 = __importDefault(require("./orderRouter"));
var phoneRouter_1 = __importDefault(require("./phoneRouter"));
var positionRouter_1 = __importDefault(require("./positionRouter"));
var productRouter_1 = __importDefault(require("./productRouter"));
var searchRouter_1 = __importDefault(require("./searchRouter"));
var userRouter_1 = __importDefault(require("./userRouter"));
var router = (0, express_1.Router)();
router.use('/users', userRouter_1.default);
router.use('/', positionRouter_1.default);
router.use('/dealtitles', dealTitleRouter_1.default);
router.use('/dimensions', dimensionRouter_1.default);
router.use('/phones', phoneRouter_1.default);
router.use('/emails', emailRouter_1.default);
router.use('/contacts', contactRouter_1.default);
router.use('/companies', companyRouter_1.default);
router.use('/comments', commentRouter_1.default);
router.use('/deals', dealRouter_1.default);
router.use('/orders', orderRouter_1.default);
router.use('/orderitems', orderItemRouter_1.default);
router.use('/products', productRouter_1.default);
router.use('/search', searchRouter_1.default);
// router.post('/registration',
//   body('email').isEmail(),
//   body('password').isLength({min: 6, max: 32}),  
//   userController.registration);
// router.post('/login', userController.login);
// router.post('/logout', userController.logout);
// router.get('/refresh', userController.refresh);
// router.get('/users', authMiddleware, userController.getUsers);
// router.get('/users', userController.getUsers);
// router.get('/users/:id', userController.getUserById);
// router.put('/users/profileImage', userController.updateUserProfileImage);
// router.put('/users/isBlocked', userController.updateUserIsBlocked);
// router.get('/role', roleController.getRole);
// router.get('/role/:id', roleController.getRoleByID);
// router.get('/roles', roleController.getAllRoles);
// router.post('/role', roleController.addRole);
// router.get('/product', productController.getProduct);
// router.get('/product/:id', productController.getProductByID);
// router.get('/products', productController.getAllProducts);
// router.post('/product', productController.addProduct);
// router.get('/books', bookController.getAllBooks);
// router.get('/books/:id', bookController.getBookByID);
// router.post('/books', bookController.addBook);
// router.put('/books', bookController.updateBookAmountByID);
// router.get('/genre', genreController.getGenre);
// router.get('/genre/:id', genreController.getGenreByID);
// router.get('/genres', genreController.getAllGenres);
// router.post('/genres', genreController.addGenre);
// router.get('/booked/books/:id', bookedController.getAllBookedsBookID);
// router.get('/booked/users/:id', bookedController.getAllBookedsUserID);
// router.get('/booked/:id', bookedController.getBookedByID);
// router.get('/bookeds', bookedController.getAllBookeds);
// router.post('/booked', bookedController.addBooked);
// router.delete('/booked/:id', bookedController.deleteBooked);
// router.get('/issued/books/:id', issuedController.getAllIssuedsBookID);
// router.get('/issued/users/:id', issuedController.getAllIssuedsUserID);
// router.get('/issued/:id', issuedController.getIssuedByID);
// router.get('/issueds', issuedController.getAllIssueds);
// router.post('/issued', issuedController.addIssued);
// router.delete('/issued/:id', issuedController.deleteIssued);
// router.get('/comment/books/:id', commentConroller.getAllCommentsBookID);
// router.get('/comment/users/:id', commentConroller.getAllCommentsUserID);
// router.get('/comment/:id', commentConroller.getCommentByID);
// router.get('/comments', commentConroller.getAllComments);
// router.post('/comment', commentConroller.addComment);
// router.put('/comment', commentConroller.updateCommetByModerator);
// router.delete('/comment/:id', commentConroller.deleteComment);
exports.default = router;
